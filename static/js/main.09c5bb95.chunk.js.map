{"version":3,"sources":["lib/util/range.js","lib/util/array.js","lib/util/date.js","lib/components/Month.js","lib/Calendar.js","lib/components/defaults/DefaultCalendarHeading.js","lib/util/localizeDate.js","examples/Example1.js","examples/Example2.js","examples/Example3.js","examples/Example4.js","examples/Example5.js","App.js","index.js"],"names":["range","lowEnd","highEnd","arr","c","arrayRotate","count","length","Math","floor","concat","Object","toConsumableArray","slice","treatAsUTC","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","dayPerWeekRange","firstCalendarWeekday","monthDayOffsetsByWeekForYearMonth","year","month","weekdayOfTheFirst","getDay","firstWeekdayInMonth","orderedMonthWeekdays","firstDayOfTheMonthDayOffset","dayOffset","adjustedDayOffset","adjustedDayOffsetBasedOnFirstCalendarWeekday","firstDayOfTheMonthOffsetFromWeekAndDay","firstDayOfMonth","lastDayOfPreviousMonth","lastDayOfMonth","totalDaysInMonth","startDate","endDate","daysConsumedByFirstWeek","firstDayOfTheMonth","indexOfFirstWeekdayOfMonth","undefined","Error","daysInFirstCalendarWeek","daysInMonthExcludingFirstWeek","ceil","calendarWeeksInMonth","map","_","weekIndex","dayIndex","nextMonth","previousMonth","defaultBorderOptions","width","color","borderStyle","weekValue","lastWeekValue","borderOptions","borderWidth","borderColor","borderTop","borderRight","borderBottom","borderLeft","WeekdayHeadings","props","react_default","a","createElement","className","weekdays","key","renderDayHeading","parseInt","Month","locale","firstWeekday","orderedDaysPerWeek","monthDayOffsetsByWeekForCurrentMonth","Month_WeekdayHeadings","dayOffsetsForWeek","id","cellDate","dateOfCalendarWeekAndWeekdayIndex","cellID","style","objectSpread","onClick","onDayPress","renderDay","Calendar","display","flex","flexDirection","renderHeading","Month_Month","DefaultCalendarHeading","justifyContent","marginTop","marginBottom","onPreviousMonthClicked","fontSize","title","onNextMonthClicked","localizedYearMonth","monthFormat","yearFormat","toLocaleDateString","localizedWeekdayNames","format","sunday","i","valueOf","setDate","getDate","weekday","timeZone","Example1","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedCellIDs","indexOf","setState","filter","cID","selectedYear","selectedMonth","dayNumber","dayText","selectedMonthStartDate","selectedMonthEndDate","dayIsInSelectedMonth","fontWeight","toDateString","backgroundColor","cursor","userSelect","margin","DefaultCalendarHeading_DefaultCalendarHeading","_nextMonth","_previousMonth","getFullYear","getMonth","inherits","createClass","value","_this2","Calendar_Calendar","Component","Example2","Example3","Example4","secondMonthYear","secondMonth","height","paddingTop","paddingLeft","paddingRight","Example5","shortDescriptionStyle","padding","marginLeft","EXAMPLES","component","shortDescription","description","href","App","selectedExample","keys","exampleComponent","ExampleComponent","borderRightWidth","type","name","checked","onChange","renderExample","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.09c5bb95.chunk.js","sourcesContent":["/**\n * Based off: https://stackoverflow.com/a/21354858/932896\n * Modified to behave like python's range function.\n * Eg. range(0,4) = [0, 1, 2, 3]\n */\nexport function range(lowEnd, highEnd) {\n  const arr = [];\n  let c = highEnd - lowEnd;\n  while (c--) {\n    arr[c] = --highEnd;\n  }\n  return arr;\n}\n","// @flow\n\n// Adapted from: https://stackoverflow.com/a/33451102/932896\nexport function arrayRotate<T>(arr: Array<T>, count: number): Array<T> {\n  count -= arr.length * Math.floor(count / arr.length);\n  return [...arr.slice(count), ...arr.slice(0, count)];\n}\n","// @flow\n\nimport { range } from '../util/range';\nimport { arrayRotate } from '../util/array';\nimport type { Weekday } from '../types';\n\n// https://stackoverflow.com/a/11252167/932896\nfunction treatAsUTC(date: Date): Date {\n  const result = new Date(date);\n  result.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n  return result;\n}\n\n/** This function calculates the days between two dates, treating one day as 24 hours and each of the input dates\n * as if they refer to midnight. So startDate: 2018-09-03, endDate: 2018-09-04 would return 1.\n * https://stackoverflow.com/a/11252167/932896\n */\nfunction daysBetween(startDate: Date, endDate: Date): number {\n  const millisecondsPerDay = 24 * 60 * 60 * 1000;\n  return (treatAsUTC(endDate) - treatAsUTC(startDate)) / millisecondsPerDay;\n}\n\nexport const dayPerWeekRange = (firstCalendarWeekday: Weekday): Array<Weekday> =>\n  arrayRotate<Weekday>([0, 1, 2, 3, 4, 5, 6], firstCalendarWeekday);\n\nexport function daysInFirstCalendarWeek(firstDayOfTheMonth: Date, firstCalendarWeekday: Weekday): number {\n  const indexOfFirstWeekdayOfMonth = firstDayOfTheMonth.getDay(); // getDay is indexed Sun = 0, Sat = 6.\n  if (firstCalendarWeekday === undefined || indexOfFirstWeekdayOfMonth === undefined) {\n    throw new Error('Invalid state. We need both a first day of the month and first calendar weekday index.');\n  }\n  if (indexOfFirstWeekdayOfMonth >= firstCalendarWeekday) {\n    return 7 - indexOfFirstWeekdayOfMonth + firstCalendarWeekday;\n  }\n  return firstCalendarWeekday - indexOfFirstWeekdayOfMonth;\n}\n\n// Sun = 0, Sat = 6.\nexport function firstWeekdayInMonth(year: number, month: number): Weekday {\n  // We know getDay returns 0-6, so force flow to believe we have a Weekday.\n  return ((new Date(year, month - 1, 1).getDay(): any): Weekday);\n}\n\nexport const adjustedDayOffsetBasedOnFirstCalendarWeekday = (dayOffset: number, firstCalendarWeekday: number) => {\n  let adjustedDayOffset = dayOffset;\n  if (adjustedDayOffset < firstCalendarWeekday) {\n    adjustedDayOffset += 7;\n  }\n  return adjustedDayOffset;\n};\n\nexport const monthDayOffsetsByWeekForYearMonth = (\n  year: number,\n  month: number,\n  firstCalendarWeekday: Weekday,\n): Array<Array<number>> => {\n  const weekdayOfTheFirst = firstWeekdayInMonth(year, month);\n  const orderedMonthWeekdays = dayPerWeekRange(firstCalendarWeekday);\n  const firstDayOfTheMonthDayOffset = adjustedDayOffsetBasedOnFirstCalendarWeekday(\n    orderedMonthWeekdays[0],\n    firstCalendarWeekday,\n  );\n  const adjustedFirstDayOfTheMonthOffset =\n    firstDayOfTheMonthDayOffset > weekdayOfTheFirst ? firstDayOfTheMonthDayOffset - 7 : firstDayOfTheMonthDayOffset;\n  const firstDayOfTheMonthOffsetFromWeekAndDay = adjustedFirstDayOfTheMonthOffset - weekdayOfTheFirst + 1;\n  return range(0, calendarWeeksInMonth(year, month, firstCalendarWeekday)).map((_, weekIndex) =>\n    orderedMonthWeekdays.map((_, dayIndex) => firstDayOfTheMonthOffsetFromWeekAndDay + weekIndex * 7 + dayIndex),\n  );\n};\n\nexport function calendarWeeksInMonth(year: number, month: number, firstCalendarWeekday: Weekday): number {\n  // The incoming month is 1 indexed. Convert it to 0 indexed.\n  const firstDayOfMonth = new Date(year, month - 1, 1);\n  const lastDayOfPreviousMonth = new Date(year, month - 1, 0);\n  // 0 for day gives us the last day of the month. Using month directly gives us the next month due to 1-to-0 indexing.\n  const lastDayOfMonth = new Date(year, month, 0);\n  // This function uses midnight on the input dates to do its calculation. To get the total days in the month, we need\n  // the difference between the last day of the previous month, and the last day of the current month.\n  const totalDaysInMonth = daysBetween(lastDayOfPreviousMonth, lastDayOfMonth);\n  const daysConsumedByFirstWeek = daysInFirstCalendarWeek(firstDayOfMonth, firstCalendarWeekday);\n  const daysInMonthExcludingFirstWeek = totalDaysInMonth - daysConsumedByFirstWeek;\n  // To get the remaining weeks in the month, take the days that weren't in the first week and divide by 7. Since\n  // we need to include an additional calendar week for partial weeks, 'ceil' the division result. Add 1 to account\n  // for the first week of the month.\n  return Math.ceil(daysInMonthExcludingFirstWeek / 7) + 1;\n}\n\nexport function nextMonth(year: number, month: number) {\n  if (month === 12) {\n    return { year: year + 1, month: 1 };\n  }\n  return { year, month: month + 1 };\n}\n\nexport function previousMonth(year: number, month: number) {\n  if (month === 1) {\n    return { year: year - 1, month: 12 };\n  }\n  return { year, month: month - 1 };\n}\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\n\nimport { dayPerWeekRange, monthDayOffsetsByWeekForYearMonth } from '../util/date';\nimport './Month.css';\nimport type { BorderOptions, Weekday } from '../types';\n\ntype MonthProps = {|\n  year: number,\n  month: number,\n  locale: string,\n  firstWeekday: Weekday,\n  renderDay: (date: Date, cellID: string) => Node,\n  renderDayHeading: ?(dayIndex: number) => Node,\n  onDayPress: ?(date: Date, cellID: string) => void,\n  borderOptions?: BorderOptions,\n|};\n\ntype WeekdayHeadingsProps = {|\n  locale: string,\n  weekdays: Array<Weekday>,\n  renderDayHeading: (dayIndex: number) => Node,\n|};\n\nconst defaultBorderOptions: BorderOptions = {\n  width: 1,\n  color: 'black',\n};\n\nconst dateOfCalendarWeekAndWeekdayIndex = (year: number, month: number, dayOffset: number) => {\n  return new Date(year, month - 1, dayOffset);\n};\n\nconst borderStyle = (dayIndex: number, weekValue: number, lastWeekValue: number, borderOptions: BorderOptions) => {\n  let borderWidth, borderColor;\n  if (borderOptions === 'no-border') {\n    borderWidth = 0;\n    borderColor = 'black';\n  } else {\n    ({ width: borderWidth, color: borderColor } = borderOptions);\n  }\n  const borderTop = borderWidth;\n  const borderLeft = borderWidth;\n  const borderRight = dayIndex === 6 ? borderWidth : 0;\n  const borderBottom = weekValue === lastWeekValue ? borderWidth : 0;\n  return {\n    borderTop,\n    borderRight,\n    borderBottom,\n    borderLeft,\n    borderColor,\n    borderStyle: 'solid',\n  };\n};\n\nconst WeekdayHeadings = (props: WeekdayHeadingsProps) => {\n  return (\n    <div className=\"Month-week-header\">\n      {props.weekdays.map(dayIndex => {\n        return (\n          <div className=\"Month-week-header-weekday\" key={dayIndex}>\n            {props.renderDayHeading && props.renderDayHeading(parseInt(dayIndex, 10))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Month = (props: MonthProps) => {\n  const { year, month, locale, firstWeekday: firstCalendarWeekday, borderOptions } = props;\n  const orderedDaysPerWeek = dayPerWeekRange(firstCalendarWeekday);\n  const monthDayOffsetsByWeekForCurrentMonth = monthDayOffsetsByWeekForYearMonth(year, month, firstCalendarWeekday);\n  return (\n    <div className=\"Month-month\">\n      {props.renderDayHeading && (\n        <WeekdayHeadings weekdays={orderedDaysPerWeek} locale={locale} renderDayHeading={props.renderDayHeading} />\n      )}\n      {monthDayOffsetsByWeekForCurrentMonth.map((dayOffsetsForWeek, weekIndex) => (\n        <div key={`${year}-${month}-${weekIndex}`} id={`Month-week-${weekIndex}`} className=\"Month-week\">\n          {dayOffsetsForWeek.map((dayOffset, dayIndex) => {\n            const cellDate = dateOfCalendarWeekAndWeekdayIndex(year, month, dayOffset);\n            const cellID = `${weekIndex}-${dayOffset}`;\n            return (\n              <div\n                style={{\n                  ...borderStyle(\n                    dayIndex,\n                    weekIndex,\n                    monthDayOffsetsByWeekForCurrentMonth.length - 1,\n                    borderOptions || defaultBorderOptions,\n                  ),\n                }}\n                key={`${year}-${month}-${dayOffset}`}\n                id={`Month-day-${cellID}`}\n                className=\"Month-day\"\n                onClick={() => props.onDayPress != null && props.onDayPress(cellDate, cellID)}\n              >\n                {props.renderDay(cellDate, cellID)}\n              </div>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n};\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\n\nimport { Month } from './components/Month';\nimport type { BorderOptions, Weekday } from './types';\n\ntype CalendarProps = {|\n  year: number,\n  month: number,\n  locale: string,\n  firstWeekday?: Weekday, // This defaults to 0/Sunday.\n  renderDay: (date: Date, cellID: string) => Node,\n  renderDayHeading?: (dayIndex: number) => Node,\n  renderHeading?: () => Node,\n  borderOptions?: BorderOptions,\n  // Since you can render the day as you please, onDayPress is a convenience method. You can implement your own\n  // onPress logic within your renderDay method, if you'd prefer.\n  onDayPress?: (date: Date, cellID: string) => void,\n|};\n\nexport const Calendar = (props: CalendarProps) => {\n  return (\n    <div style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\n      {props.renderHeading && props.renderHeading()}\n      <Month\n        locale={props.locale}\n        year={props.year}\n        month={props.month}\n        firstWeekday={props.firstWeekday || 0}\n        renderDay={props.renderDay}\n        renderDayHeading={props.renderDayHeading}\n        onDayPress={props.onDayPress}\n        borderOptions={props.borderOptions}\n      />\n    </div>\n  );\n};\n","// @flow\n\nimport React from 'react';\n\ntype DefaultCalendarHeadingProps = {\n  title: string,\n  onNextMonthClicked: () => void,\n  onPreviousMonthClicked: () => void,\n};\n\nexport const DefaultCalendarHeading = (props: DefaultCalendarHeadingProps) => {\n  return (\n    <div style={{ width: '100%', display: 'flex', justifyContent: 'space-between', marginTop: 5, marginBottom: 5 }}>\n      <button onClick={props.onPreviousMonthClicked}>{'<<<'}</button>\n      <div style={{ fontSize: 20 }}>{props.title}</div>\n      <button onClick={props.onNextMonthClicked}>{'>>>'}</button>\n    </div>\n  );\n};\n","// @flow\n\nimport { arrayRotate } from './array.js';\nimport { range } from './range.js';\nimport type { Week, Weekday } from '../types';\n\nexport type YearFormat = 'numeric' | '2-digit';\nexport type MonthFormat = 'numeric' | '2-digit' | 'narrow' | 'short' | 'long';\nexport type WeekdayFormat = 'narrow' | 'short' | 'long';\n\nexport function localizedYearMonth(\n  locale: string,\n  monthFormat: MonthFormat,\n  yearFormat: YearFormat,\n  year: number,\n  month: number,\n) {\n  const firstOfMonth = new Date(year, month - 1, 1); // Convert from 1-indexed to 0-indexed.\n  return firstOfMonth.toLocaleDateString(locale, { month: monthFormat, year: yearFormat });\n}\n\nexport function localizedWeekdayNames(locale: string, format: WeekdayFormat): Week {\n  // January 4th, 1970, 00:00:00. The first Sunday after the epoch. We can use any arbitrary Sunday, here, but we do\n  // need concrete dates in order to get localized weekday names, using only native Javascript.\n  const sunday = new Date(259200000);\n  // We (mostly) trust ourselves, so we type-cast the result of this to 'Week'.\n  const weekdayNames = range(0, 7).map((_, i) => {\n    const date = new Date(sunday.valueOf());\n    date.setDate(date.getDate() + i);\n    return date.toLocaleDateString(locale, { weekday: format, timeZone: 'utc' });\n  });\n  return ((weekdayNames: any): Week);\n}\n\n/**\n * firstWeekDay - The first week day based on Javascript's native getDay() method where Sun = 0 ... Sat = 6. eg. If you\n *    want to indicate Mon, supply the value '1'.\n */\nexport function localizedWeekdayNamesStartingWith(\n  locale: string,\n  format: WeekdayFormat,\n  startingWeekDay: Weekday,\n): Week {\n  // We know we'll get a list of 7 weekdays out of this, but flow does not support a type for a tuple with a\n  // generic amount of parameters, so we can't type arrayRotate as [genericNumberOfParams] => [genericNumberOfParams].\n  // As such, we're helping flow out by telling it we know we have a 'Week' to return, here.\n  return ((arrayRotate([...localizedWeekdayNames(locale, format)], startingWeekDay): any): Week);\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport type { Element } from 'react';\n\nimport { Calendar } from '../lib/Calendar';\nimport { DefaultCalendarHeading } from '../lib/components/defaults/DefaultCalendarHeading';\nimport { nextMonth, previousMonth } from '../lib/util/date';\nimport { localizedWeekdayNames, localizedYearMonth } from '../lib/util/localizeDate';\n\ntype State = {\n  year: number,\n  month: number,\n  selectedCellIDs: Array<string>,\n};\n\ntype Props = {};\n\n/** This example shows a calendar rendered in English with clickable days and paging implemented via the\n *  component's state.\n */\nexport class Example1 extends Component<Props, State> {\n  locale = 'en-us';\n  localizedWeekdayNames = localizedWeekdayNames(this.locale, 'long');\n\n  constructor(props: Props) {\n    super(props);\n    const date = new Date();\n    this.state = { year: date.getFullYear(), month: date.getMonth() + 1, selectedCellIDs: [] };\n  }\n\n  onDayPress = (date: Date, cellID: string) => {\n    if (this.state.selectedCellIDs.indexOf(cellID) !== -1) {\n      this.setState({ selectedCellIDs: this.state.selectedCellIDs.filter(cID => cID !== cellID) });\n    } else {\n      this.setState({ selectedCellIDs: [...this.state.selectedCellIDs, cellID] });\n    }\n  };\n\n  renderDay = (date: Date, cellID: string, selectedYear: number, selectedMonth: number) => {\n    const dayNumber = date.getDate();\n    const dayText =\n      dayNumber === 1 ? `${date.toLocaleDateString(this.locale, { month: 'short' })} ${dayNumber}` : dayNumber;\n    const selectedMonthStartDate = new Date(selectedYear, selectedMonth - 1, 1); // first day of month.\n    const selectedMonthEndDate = new Date(selectedYear, selectedMonth, 0); // last day of month.\n    const dayIsInSelectedMonth = date >= selectedMonthStartDate && date <= selectedMonthEndDate;\n    const isToday = new Date().toDateString() === date.toDateString();\n    let color = `grey`;\n    let fontWeight = `normal`;\n    if (isToday) {\n      color = `blue`;\n      fontWeight = `bold`;\n    } else if (dayIsInSelectedMonth) {\n      color = `black`;\n    }\n    const backgroundColor = this.state.selectedCellIDs.indexOf(cellID) !== -1 ? `yellow` : `white`;\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flex: 1,\n          justifyContent: 'flexStart',\n          cursor: 'pointer',\n          userSelect: 'none',\n          backgroundColor,\n        }}\n        className=\"calendar-day\"\n      >\n        <div style={{ display: 'flex', flex: 1, margin: 5, color, fontWeight }}>{dayText}</div>\n      </div>\n    );\n  };\n\n  renderDayHeading = (dayIndex: number): Element<*> => <div>{this.localizedWeekdayNames[dayIndex]}</div>;\n\n  renderHeading = () => {\n    return (\n      <DefaultCalendarHeading\n        title={localizedYearMonth(this.locale, 'long', 'numeric', this.state.year, this.state.month)}\n        onNextMonthClicked={() => {\n          const { year, month } = nextMonth(this.state.year, this.state.month);\n          this.setState({ year, month });\n        }}\n        onPreviousMonthClicked={() => {\n          const { year, month } = previousMonth(this.state.year, this.state.month);\n          this.setState({ year, month });\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Calendar\n        locale={this.locale}\n        year={this.state.year}\n        month={this.state.month}\n        renderDay={(date, cellID) => this.renderDay(date, cellID, this.state.year, this.state.month)}\n        renderDayHeading={this.renderDayHeading}\n        renderHeading={this.renderHeading}\n        borderOptions={{ width: 1, color: 'black' }}\n        onDayPress={this.onDayPress}\n      />\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport type { Node } from 'react';\n\nimport { Calendar } from '../lib/Calendar';\nimport { DefaultCalendarHeading } from '../lib/components/defaults/DefaultCalendarHeading';\nimport { nextMonth, previousMonth } from '../lib/util/date';\nimport { localizedWeekdayNames, localizedYearMonth } from '../lib/util/localizeDate';\n\ntype State = {\n  year: number,\n  month: number,\n};\n\ntype Props = {};\n\n/** This example shows a calendar rendered in English with paging implemented via the component's state. */\nexport class Example2 extends Component<Props, State> {\n  locale = 'fr-ca';\n  localizedWeekdayNames = localizedWeekdayNames(this.locale, 'short');\n\n  constructor(props: Props) {\n    super(props);\n    const date = new Date();\n    this.state = { year: date.getFullYear(), month: date.getMonth() + 1 };\n  }\n\n  renderHeading = () => {\n    return (\n      <DefaultCalendarHeading\n        title={localizedYearMonth(this.locale, 'long', 'numeric', this.state.year, this.state.month)}\n        onNextMonthClicked={() => {\n          const { year, month } = nextMonth(this.state.year, this.state.month);\n          this.setState({ year, month });\n        }}\n        onPreviousMonthClicked={() => {\n          const { year, month } = previousMonth(this.state.year, this.state.month);\n          this.setState({ year, month });\n        }}\n      />\n    );\n  };\n\n  renderDayHeading = (dayIndex: number): Node => <div>{this.localizedWeekdayNames[dayIndex]}</div>;\n\n  renderDay = (date: Date) => {\n    return (\n      <div style={{ display: 'flex', flex: 1, justifyContent: `flexStart` }} className=\"calendar-day\">\n        <div style={{ display: 'flex', flex: 1, margin: 5 }}>{date.getDate()}</div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Calendar\n        locale={this.locale}\n        year={this.state.year}\n        month={this.state.month}\n        renderDay={this.renderDay}\n        renderDayHeading={this.renderDayHeading}\n        renderHeading={this.renderHeading}\n        borderOptions={{ width: 2, color: 'lightgrey' }}\n      />\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport type { Node } from 'react';\n\nimport { Calendar } from '../lib/Calendar';\n\ntype State = {\n  year: number,\n  month: number,\n};\n\ntype Props = {};\n\n/** This example shows a calendar rendered in English with paging implemented via the component's state. */\nexport class Example3 extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const date = new Date();\n    this.state = { year: date.getFullYear(), month: date.getMonth() + 1 };\n  }\n\n  renderDay = (date: Date): Node => {\n    return (\n      <div style={{ display: 'flex', flex: 1, justifyContent: `flexStart` }} className=\"calendar-day\">\n        <div style={{ display: 'flex', flex: 1, margin: 5 }}>{date.getDate()}</div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Calendar\n        locale=\"en-us\"\n        year={this.state.year}\n        month={this.state.month}\n        renderDay={this.renderDay}\n        borderOptions=\"no-border\"\n      />\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport type { Node } from 'react';\n\nimport { Calendar } from '../lib/Calendar';\nimport { nextMonth } from '../lib/util/date';\nimport { localizedWeekdayNames, localizedYearMonth } from '../lib/util/localizeDate';\n\ntype State = {\n  year: number,\n  month: number,\n};\n\ntype Props = {};\n\n/** This example shows a calendar rendered in English with paging implemented via the component's state. */\nexport class Example4 extends Component<Props, State> {\n  locale = 'en-us';\n  localizedWeekdayNames = localizedWeekdayNames(this.locale, 'narrow');\n\n  constructor(props: Props) {\n    super(props);\n    const date = new Date();\n    this.state = { year: date.getFullYear(), month: date.getMonth() + 1 };\n  }\n\n  renderDay = (date: Date) => {\n    return (\n      <div style={{ display: 'flex', flex: 1, justifyContent: `flexStart` }} className=\"calendar-day\">\n        <div style={{ display: 'flex', flex: 1, margin: 5 }}>{date.getDate()}</div>\n      </div>\n    );\n  };\n\n  renderHeading = (year: number, month: number): Node => (\n    <div style={{ fontSize: 22 }}>{localizedYearMonth(this.locale, 'long', 'numeric', year, month)}</div>\n  );\n\n  renderDayHeading = (dayIndex: number): Node => <div>{this.localizedWeekdayNames[dayIndex]}</div>;\n\n  render() {\n    const { year: secondMonthYear, month: secondMonth } = nextMonth(this.state.year, this.state.month);\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          flex: 1,\n          height: 500,\n          paddingTop: 40,\n          paddingLeft: 20,\n          paddingRight: 20,\n        }}\n      >\n        <Calendar\n          locale={this.locale}\n          year={this.state.year}\n          month={this.state.month}\n          renderDay={this.renderDay}\n          renderDayHeading={this.renderDayHeading}\n          renderHeading={() => this.renderHeading(this.state.year, this.state.month)}\n        />\n        <div style={{ width: 20 }} />\n        <Calendar\n          locale={this.locale}\n          year={secondMonthYear}\n          month={secondMonth}\n          renderDay={this.renderDay}\n          renderDayHeading={this.renderDayHeading}\n          renderHeading={() => this.renderHeading(secondMonthYear, secondMonth)}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport type { Node } from 'react';\n\nimport { Calendar } from '../lib/Calendar';\nimport { DefaultCalendarHeading } from '../lib/components/defaults/DefaultCalendarHeading';\nimport { nextMonth, previousMonth } from '../lib/util/date';\nimport { localizedWeekdayNames, localizedYearMonth } from '../lib/util/localizeDate';\n\ntype State = {\n  year: number,\n  month: number,\n};\n\ntype Props = {};\n\nexport class Example5 extends Component<Props, State> {\n  locale = 'en-us';\n  localizedWeekdayNames = localizedWeekdayNames(this.locale, 'short');\n\n  constructor(props: Props) {\n    super(props);\n    const date = new Date();\n    this.state = { year: date.getFullYear(), month: date.getMonth() + 1 };\n  }\n\n  renderHeading = () => {\n    return (\n      <DefaultCalendarHeading\n        title={localizedYearMonth(this.locale, 'long', 'numeric', this.state.year, this.state.month)}\n        onNextMonthClicked={() => {\n          const { year, month } = nextMonth(this.state.year, this.state.month);\n          this.setState({ year, month });\n        }}\n        onPreviousMonthClicked={() => {\n          const { year, month } = previousMonth(this.state.year, this.state.month);\n          this.setState({ year, month });\n        }}\n      />\n    );\n  };\n\n  renderDayHeading = (dayIndex: number): Node => <div>{this.localizedWeekdayNames[dayIndex]}</div>;\n\n  renderDay = (date: Date) => {\n    return (\n      <div style={{ display: 'flex', flex: 1, justifyContent: `flexStart` }} className=\"calendar-day\">\n        <div style={{ display: 'flex', flex: 1, margin: 5 }}>{date.getDate()}</div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Calendar\n        year={this.state.year}\n        month={this.state.month}\n        locale={this.locale}\n        firstWeekday={1} // 1 = Monday\n        renderDay={this.renderDay}\n        renderDayHeading={this.renderDayHeading}\n        renderHeading={this.renderHeading}\n        borderOptions={{ width: 2, color: 'lightgrey' }}\n      />\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react';\n\nimport { Example1 } from './examples/Example1';\nimport { Example2 } from './examples/Example2';\nimport { Example3 } from './examples/Example3';\nimport { Example4 } from './examples/Example4';\nimport { Example5 } from './examples/Example5';\nimport './App.css';\n\ntype State = {\n  selectedExample: string,\n};\n\nconst shortDescriptionStyle = { padding: 0, margin: 0, marginLeft: 30, marginBottom: 15, marginTop: 5 };\n\nconst EXAMPLES = {\n  Example1: {\n    component: Example1,\n    shortDescription: (\n      <ul style={shortDescriptionStyle}>\n        <li>paging</li>\n        <li>weekday labels</li>\n        <li>today indicator</li>\n        <li>clickable</li>\n      </ul>\n    ),\n    description: (\n      <ul>\n        <li>{\"This is an example of an 'en-us' calendar with Sunday as its first day of the week.\"}</li>\n        <li>\n          {\"It's using the default heading component that's included with the library in \"}\n          <i>defaults/DefaultHeading.js.</i>\n        </li>\n        <li>\n          {\"It's using the \"} <i>localizedWeekdayNames</i> {' function from '} <i>util/localizeDate</i>\n          {' to display a properly localized weekday heading.'}\n        </li>\n        <li>\n          The calendar has a simple <i>onDayPress</i> implementation that highlights cells yellow.\n        </li>\n        <li>\n          <a href=\"https://github.com/BrennanR/react-clean-calendar/blob/master/src/examples/Example1.js\">Source</a>\n        </li>\n      </ul>\n    ),\n  },\n  Example2: {\n    component: Example2,\n    shortDescription: (\n      <ul style={shortDescriptionStyle}>\n        <li>french (fr-ca)</li>\n        <li>paging</li>\n        <li>weekday labels</li>\n      </ul>\n    ),\n    description: (\n      <ul>\n        <li>{\"This is an example of an 'fr-ca' calendar with Sunday as its first day of the week.\"}</li>\n        <li>\n          {\"It's using the default heading component that's included with the library in \"}\n          <i>defaults/DefaultHeading.js.</i>\n        </li>\n        <li>\n          {\"It's using the \"} <i>localizedWeekdayNames</i> {' function from '} <i>util/localizeDate</i>\n          {' to display a properly localized weekday heading.'}\n        </li>\n        <li>\n          <a href=\"https://github.com/BrennanR/react-clean-calendar/blob/master/src/examples/Example2.js\">Source</a>\n        </li>\n      </ul>\n    ),\n  },\n  Example3: {\n    component: Example3,\n    shortDescription: (\n      <ul style={shortDescriptionStyle}>\n        <li>no paging</li>\n        <li>no labels</li>\n        <li>no borders</li>\n      </ul>\n    ),\n    description: (\n      <ul>\n        <li>{\"This is an example of an 'en-ca' calendar with Sunday as its first day of the week.\"}</li>\n        <li>No day heading or calendar heading is used.</li>\n        <li>\n          <a href=\"https://github.com/BrennanR/react-clean-calendar/blob/master/src/examples/Example3.js\">Source</a>\n        </li>\n      </ul>\n    ),\n  },\n  Example4: {\n    component: Example4,\n    shortDescription: (\n      <ul style={shortDescriptionStyle}>\n        <li>two calendars</li>\n      </ul>\n    ),\n    description: (\n      <ul>\n        <li>\n          {\"This is an example of two side-by-side 'en-ca' calendars with Sunday as their first day of the week.\"}\n        </li>\n        <li>\n          <a href=\"https://github.com/BrennanR/react-clean-calendar/blob/master/src/examples/Example4.js\">Source</a>\n        </li>\n      </ul>\n    ),\n  },\n  Example5: {\n    component: Example5,\n    shortDescription: (\n      <ul style={shortDescriptionStyle}>\n        <li>starts Monday</li>\n      </ul>\n    ),\n    description: (\n      <ul>\n        <li>{\"This is an example of an 'en-ca' calendar.\"}</li>\n        <li>Notably, the first day of the week on this calendar is Monday.</li>\n        <li>\n          <a href=\"https://github.com/BrennanR/react-clean-calendar/blob/master/src/examples/Example5.js\">Source</a>\n        </li>\n      </ul>\n    ),\n  },\n};\n\nclass App extends Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = { selectedExample: Object.keys(EXAMPLES)[0] };\n  }\n\n  renderExample(exampleComponent: any) {\n    const ExampleComponent = exampleComponent;\n    return <ExampleComponent />;\n  }\n\n  render() {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'row', width: '100%', height: '100%' }}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            borderStyle: 'solid',\n            borderColor: 'black',\n            borderWidth: 0,\n            borderRightWidth: 2,\n            padding: 10,\n            width: 200,\n          }}\n        >\n          <form style={{ display: 'flex', flexDirection: 'column' }}>\n            {Object.keys(EXAMPLES).map(key => (\n              <div style={{ display: 'flex', flexDirection: 'column' }} key={key}>\n                <label style={{ display: 'flex', flexDirection: 'row' }}>\n                  <input\n                    type=\"radio\"\n                    name={key}\n                    value={key}\n                    checked={key === this.state.selectedExample}\n                    onChange={() => this.setState({ selectedExample: key })}\n                  />\n                  {key}\n                </label>\n                <div>{EXAMPLES[key].shortDescription}</div>\n              </div>\n            ))}\n          </form>\n        </div>\n        <div\n          style={{ display: 'flex', flexDirection: `column`, flex: 1, height: '100%', justifyContent: 'center' }}\n          className=\"App\"\n        >\n          <div style={{ marginTop: 5, marginBottom: 5 }}>{EXAMPLES[this.state.selectedExample].description}</div>\n          <div style={{ backgroundColor: 'black', height: 1, width: '100%' }} />\n          {this.renderExample(EXAMPLES[this.state.selectedExample].component)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}